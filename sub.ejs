<!DOCTYPE html>
<html lang="en" dir="ltr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= data.email %> - Subscription information System By Chenux</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300;400;500;600;700&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/vazir-font/29.0.1/font-face.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <style>
        body,h1{color:var(--text-primary)}*,h1{margin:0}.card,.card-header,.info-item,.section-title,h1{position:relative}.info-label,.platform-card span{text-transform:uppercase;letter-spacing:.05em}.accordion,.card,.info-item{overflow:hidden}.card,.qr-popup{box-shadow:var(--box-shadow-lg)}:root{--primary-gradient:linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);--secondary-gradient:linear-gradient(135deg, #3b82f6 0%, #2dd4bf 100%);--success-gradient:linear-gradient(135deg, #10b981 0%, #34d399 100%);+--warning-gradient:linear-gradient(135deg, #f59e0b 0%, #fbbf24 100%);--danger-gradient:linear-gradient(135deg, #ef4444 0%, #f87171 100%);--disabled-gradient:linear-gradient(135deg, #6b7280 0%, #9ca3af 100%);--primary-color:#6366f1;--primary-light:#818cf8;--primary-dark:#4f46e5;--success-color:#10b981;--warning-color:#f59e0b;--danger-color:#ef4444;--disabled-color:#9ca3af;--background-color:#f8fafc;--card-background:rgba(255, 255, 255, 0.9);--card-background-hover:rgba(255, 255, 255, 0.95);--glass-background:rgba(255, 255, 255, 0.7);--glass-border:rgba(255, 255, 255, 0.2);--text-primary:#0f172a;--text-secondary:#334155;--text-tertiary:#64748b;--text-quaternary:#94a3b8;--border-color:rgba(226, 232, 240, 0.8);--border-radius-sm:8px;--border-radius:16px;--border-radius-lg:24px;--border-radius-xl:32px;--box-shadow:0 10px 15px -3px rgba(0, 0, 0, 0.05),0 4px 6px -2px rgba(0, 0, 0, 0.025);--box-shadow-lg:0 20px 25px -5px rgba(0, 0, 0, 0.05),0 10px 10px -5px rgba(0, 0, 0, 0.01);--box-shadow-glass:0 8px 32px 0 rgba(31, 38, 135, 0.07);--transition-fast:0.2s;--transition-normal:0.3s;--transition-slow:0.5s;--blur-sm:8px;--blur-md:12px;--blur-lg:20px}[data-theme=dark]{--background-color:#0f172a;--card-background:rgba(15, 23, 42, 0.9);--card-background-hover:rgba(15, 23, 42, 0.95);--glass-background:rgba(15, 23, 42, 0.7);--glass-border:rgba(15, 23, 42, 0.2);--text-primary:#f8fafc;--text-secondary:#cbd5e1;--text-tertiary:#94a3b8;--text-quaternary:#64748b;--border-color:rgba(59, 69, 94, 0.8)}*{padding:0;box-sizing:border-box}body{font-family:'Plus Jakarta Sans',-apple-system,BlinkMacSystemFont,sans-serif;background-color:var(--background-color);background-image:linear-gradient(135deg,rgba(99,102,241,.1) 0,rgba(139,92,246,.1) 100%),radial-gradient(at 0 0,rgba(99,102,241,.1) 0,transparent 50%),radial-gradient(at 100% 0,rgba(139,92,246,.1) 0,transparent 50%),radial-gradient(at 100% 100%,rgba(45,212,191,.1) 0,transparent 50%),radial-gradient(at 0 100%,rgba(59,130,246,.1) 0,transparent 50%);background-size:200% 200%;animation:15s ease-in-out infinite alternate gradientShift;line-height:1.6;min-height:100vh;display:flex;align-items:center;justify-content:center;padding:20px;overflow-x:hidden}.username::before,h1{display:inline-block}.card-title,.username{display:flex;align-items:center}@keyframes gradientShift{0%{background-position:0 50%}100%{background-position:100% 50%}}.container{width:100%;max-width:480px;perspective:1000px}.card{background-color:var(--card-background);border-radius:var(--border-radius-lg);transition:all var(--transition-normal) ease;backdrop-filter:blur(var(--blur-sm));border:1px solid var(--border-color);transform-style:preserve-3d;transform:translateZ(0) rotateX(0) rotateY(0)}.card:hover{box-shadow:var(--box-shadow-glass);background-color:var(--card-background-hover)}.info-item:hover,.link-item:hover,.platforms-container:hover{box-shadow:var(--box-shadow)}.card-header{padding:30px 30px 0}.card-header::after{content:"";position:absolute;bottom:0;left:30px;right:30px;height:1px;background:var(--border-color);transform:scaleX(0);transform-origin:0 0;transition:transform var(--transition-normal) ease}.info-item:hover,.platform-card:hover{transform:translateY(-5px)}.card:hover .card-header::after{transform:scaleX(1)}.card-body{padding:24px 30px 30px}.info-item,.platforms-container{padding:20px;transition:all var(--transition-normal) ease;backdrop-filter:blur(var(--blur-sm))}.card-title{justify-content:space-between;margin-bottom:8px}h1{font-weight:700;font-size:24px;letter-spacing:-.02em}h1::after{content:"";position:absolute;bottom:-4px;left:0;width:40px;height:3px;background:var(--primary-gradient);border-radius:3px}.username{color:var(--text-secondary);font-size:16px;font-weight:500;margin-bottom:30px;gap:8px;direction:ltr}.username::before{content:"";width:10px;height:10px;border-radius:50%;background:var(--primary-gradient)}.info-item::before,.section-title::after{content:"";position:absolute;left:0;height:3px;background:var(--primary-gradient)}.info-grid{display:grid;grid-template-columns:1fr 1fr;gap:20px;margin-bottom:30px}.info-item{background-color:var(--glass-background);border-radius:var(--border-radius);border:1px solid var(--glass-border)}.info-item::before{top:0;right:0;opacity:0;transition:opacity var(--transition-normal) ease}.info-item:hover::before{opacity:1}.info-label{font-size:12px;font-weight:600;color:var(--text-tertiary);margin-bottom:10px}.info-value,.link-item input,.platform-card,.section-title{color:var(--text-primary)}.info-value{font-size:18px;font-weight:700;display:flex;align-items:center;gap:8px;flex-wrap:wrap}.download-section,.links-section{margin-top:30px}.section-title{font-size:20px;font-weight:700;margin-bottom:20px}.section-title::after{bottom:-8px;width:60px;border-radius:3px}.platforms-container{background:var(--glass-background);border:1px solid var(--glass-border);border-radius:var(--border-radius)}.platforms-container:hover{background:var(--card-background-hover)}.platforms-grid{display:flex;flex-wrap:nowrap;gap:20px;justify-content:space-between;align-items:center}.platform-card{display:flex;flex-direction:column;align-items:center;justify-content:center;text-decoration:none;transition:all var(--transition-normal) ease;text-align:center;flex:1;min-width:0}.language-toggle,.theme-toggle{background:rgba(226,232,240,.5);width:40px;height:40px;align-items:center;color:var(--text-tertiary);display:flex;transition:all var(--transition-normal) ease;cursor:pointer}.platform-icon{font-size:40px;margin-bottom:10px}.platform-card span{font-size:14px;font-weight:600}.theme-toggle{border:none;border-radius:50%;justify-content:center}.language-toggle:hover,.theme-toggle:hover{background-color:rgba(226,232,240,.8);color:var(--text-primary);transform:rotate(30deg)}.language-toggle svg,.theme-toggle svg{width:20px;height:20px}.language-toggle{border:none;border-radius:50%;justify-content:center;margin-left:10px}.card-actions{display:flex;align-items:center}.accordion{background:var(--glass-background);border:1px solid var(--glass-border);border-radius:var(--border-radius)}.accordion-header{padding:15px;cursor:pointer;background:var(--primary-gradient);color:#fff;font-weight:600;display:flex;justify-content:space-between;align-items:center;transition:all var(--transition-normal) ease}.accordion-header:hover,.copy-button:hover{background:var(--primary-dark)}.accordion-header::after{content:"▼";font-size:12px;transition:transform var(--transition-normal) ease}.accordion-header.active::after,body.rtl .accordion-header.active::after{transform:rotate(180deg)}.accordion-content{max-height:0;overflow:hidden;transition:max-height var(--transition-normal) ease;padding:0 15px}.accordion-content.active{padding:15px;max-height:500px}.links-list{list-style:none;display:grid;gap:15px}.link-item{display:flex;align-items:center;gap:10px;background:var(--card-background);padding:15px;border-radius:var(--border-radius);border:1px solid var(--glass-border);transition:all var(--transition-normal) ease}.link-item:hover{transform:translateY(-2px)}.link-item input{flex:1;background:0 0;border:none;font-size:14px;padding:5px;outline:0}.link-item button{padding:8px 16px;border:none;border-radius:var(--border-radius-sm);cursor:pointer;font-weight:600;transition:all var(--transition-fast) ease}.copy-button{background:var(--primary-gradient);color:#fff}.qr-button{background:var(--secondary-gradient);color:#fff}.qr-button:hover,.qr-close-button button:hover{opacity:.9}.qr-popup{display:none;position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);background:var(--card-background);padding:20px;border-radius:var(--border-radius);backdrop-filter:blur(var(--blur-sm));border:1px solid var(--border-color);z-index:1000}.qr-close-button{text-align:right;margin-bottom:10px}.qr-close-button button{background:var(--danger-gradient);color:#fff;border:none;border-radius:50%;width:30px;height:30px;cursor:pointer;font-weight:600}body.rtl{direction:rtl;text-align:right;font-family:vazir}body.rtl .card-actions,body.rtl .card-title,body.rtl .link-item,body.rtl .platforms-grid{flex-direction:row-reverse}body.rtl .section-title::after,body.rtl h1::after{left:auto;right:0}body.rtl .username::before{margin-right:0;margin-left:8px}body.rtl .accordion-header::after{content:"◄";margin-left:0;margin-right:auto}body.rtl .card-header::after{left:30px;right:30px;transform-origin:100% 0}body.rtl .language-toggle{margin-left:0;margin-right:10px}
        .my.h3{color:var(--text-primary); font-size: small;}
    </style>
         <script>
            function formatRemainingTime(expiryTime) {
        try {
            if (expiryTime === undefined || expiryTime === null || expiryTime === 0) {
                return "∞";
            }
    
            const expiryTimeNum = parseInt(expiryTime, 10);
            if (isNaN(expiryTimeNum)) {
                return "Invalid date";
            }
    
            const currentTime = Date.now();
            if (expiryTimeNum > currentTime) {
                const remainingMilliseconds = expiryTimeNum - currentTime;
                const days = Math.floor(remainingMilliseconds / (1000 * 60 * 60 * 24));
                const hours = Math.floor((remainingMilliseconds % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((remainingMilliseconds % (1000 * 60 * 60)) / (1000 * 60));
    
                // const lang = 'en';
                const lang = document.body.getAttribute('data-lang') || 'en'; 
                const timeUnits = {
                    en: { day: "day", hour: "hour", minute: "minute" },
                };
    
                let result = [];
                if (days > 0) result.push(`${days} ${timeUnits[lang].day}`);
                if (hours > 0) result.push(`${hours} ${timeUnits[lang].hour}`);
                if (minutes > 0) result.push(`${minutes} ${timeUnits[lang].minute}`);
    
                return result.join(" , ") || "less than a minute";
            } else {
                return "expired";
            }
        } catch (error) {
            console.error("Error in formatRemainingTime:", error.message);
            return "error";
        }
    }
         </script>
    
<%  
function formatBytes(bytes, decimals = 2) {
    if (bytes === 0) return '∞';
    const k = 1024;
    const dm = decimals < 0 ? 0 : decimals;
    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
}



function getConnectionTitle(link) {
    if (!link || typeof link !== 'string') return null;
    const protocolMatch = link.match(/^(vmess|vless|shadowsocks|trojan):\/\//i);
    const protocol = protocolMatch ? protocolMatch[1].toLowerCase() : null;
    if (protocol === 'vmess') {
        try {
            const base64Data = link.split('://')[1].split('#')[0].split('?')[0];
            const decodedData = JSON.parse(atob(decodeURI(base64Data)));
            return decodedData.ps || null;
        } catch (e) {
            console.error("vmess:", e);
            return null;
        }
    } else {
        const parts = link.split('#');
        if (parts.length < 2) return null;
        let title = parts[1].split('?')[0];
        try {
            title = decodeURIComponent(title);
        } catch (e) {
            console.error(e);
        }
        title = title.replace(/[,\-–_]\s*(\d+D)?\s*(\d+H)?\s*(\d+M)?/gi, '').trim();
        return title || null;
    }
}
%>
</head>

<body data-theme="light" data-lang="<%= data.DEFAULT_LANG ? 'fa' : 'en' %>" class="<%= data.enable ? 'rtl' : '' %>">
    <div class="container">
        <div class="card animate-fade-in">
            <div class="card-header">
                <div class="card-title">
                    <h1 data-i18n="subscriptionInfo">Usage Information</h1> 
                    
                    <div class="card-actions">
                        <button class="theme-toggle" id="themeToggle" aria-label="Toggle theme">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="5"></circle>
                                <line x1="12" y1="1" x2="12" y2="3"></line>
                                <line x1="12" y1="21" x2="12" y2="23"></line>
                                <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
                                <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
                                <line x1="1" y1="12" x2="3" y2="12"></line>
                                <line x1="21" y1="12" x2="23" y2="12"></line>
                                <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
                                <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
                            </svg>
                        </button>
                    </div>
                </div>
                <div class="username animate-fade-in delay-1">
                    <%= data.email %>
                </div>
            </div>
            <div class="card-body">
                <div class="info-grid">
                    <div class="info-item animate-fade-in delay-1">
                        <div class="info-label" data-i18n="Status">Status</div>
                        <div class="info-value">
                            <span class="status " data-i18n="<%= data.enable ? 'active' : 'disabled' %>">
                                <%= data.enable ? "active" : "disabled" %>
                            </span>
                        </div>
                    </div>
                    <div class="info-item animate-fade-in delay-2">
                        <div class="info-label" data-i18n="dataLimit">Data Limit</div>
                        <div class="info-value">
                            <%= formatBytes(data.total) %>
                        </div>
                    </div>
                    <div class="info-item animate-fade-in delay-3">
                        <div class="info-label" data-i18n="used">Data Used</div>
                        <div class="info-value">
                            <span class="reset-info">
                                <%= formatBytes((data.up + data.down)) %>
                            </span>
                        </div>
                    </div>
                    <div class="info-item animate-fade-in delay-4">
                        <div class="info-label" data-i18n="expires">Expiration</div>
                        <div class="info-value">
                            <span class="remaining-days"></span>
                        </div>
                    </div>
                </div>

                <div class="download-section animate-fade-in delay-4">
                    <h2 class="section-title" data-i18n="Download_App">Download Application</h2>
                    <div class="platforms-container">
                        <div class="platforms-grid">
                            <a href="v2rayng://install-config?url=<%= data.suburl %>" class="platform-card android">
                                <i class="fab fa-android platform-icon"></i>
                                <span data-i18n="Android">Android</span>
                            </a>
                            <a href="https://github.com/2dust/v2rayN/releases/download/7.10.5/v2rayN-windows-64.zip" class="platform-card windows">
                                <i class="fab fa-windows platform-icon"></i>
                                <span data-i18n="Windows">Windows</span>
                            </a>
                           
                            <a href="streisand://install-config?url=<%= data.suburl %>" class="platform-card ios">
                                <i class="fab fa-apple platform-icon"></i>
                                <span data-i18n="iOS">iOS</span>
                            </a>
                        </div>
                    </div>
                </div>

                <% if (data.enable==true) { %>
                    <div class="links-section animate-fade-in delay-5">
                        <h2 class="section-title" data-i18n="yourLink">Links</h2>
                        <div class="accordion">
                            <div class="accordion-header" id="accordionToggle" data-i18n="ViewyourLink">Configuration Links</div>
                            <div class="accordion-content" id="accordionContent">
                                <ul class="links-list">
                                    <% const decodedFromBase64=Buffer.from(data.suburl_content, 'base64').toString('utf-8'); 
                                       const linksArray=decodedFromBase64.split('\n').filter(link=> link.trim() !== '');
                                       linksArray.forEach(link => { %>
                                        <li class="link-item">
                                            <input type="text" value="<%= getConnectionTitle(link) || 'No Name' %>" readonly>
                                            <button class="copy-button" onclick="copyLink('<%= link %>', this)">Copy</button>
                                            <button class="qr-button" data-link="<%= link %>">QR Code</button>
                                        </li>
                                    <% }); %>
                                </ul>
                            </div>
                        </div>
                    </div>
                <% } %>
                <div class="my">
                    <h3>© Developed By <a href="https://t.me/chenuxx">Chenux</a></h3>
                </div> 

            </div>
        </div>
    </div>

    <div class="qr-popup" id="qrPopup">
        <div class="qr-close-button">
            <button onclick="closeQrPopup()">X</button>
        </div>
        <div id="qrCodeContainer"></div>
    </div>

     <script>
        const themeToggle = document.getElementById('themeToggle');
        const languageToggle = document.getElementById('languageToggle');
        const body = document.body;

        // Theme toggle functionality
        themeToggle.addEventListener('click', () => {
            if (body.getAttribute('data-theme') === 'light') {
                body.setAttribute('data-theme', 'dark');
                themeToggle.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
                    </svg>
                `;
            } else {
                body.setAttribute('data-theme', 'light');
                themeToggle.innerHTML = `
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="12" r="5"></circle>
                        <line x1="12" y1="1" x2="12" y2="3"></line>
                        <line x1="12" y1="21" x2="12" y2="23"></line>
                        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
                        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
                        <line x1="1" y1="12" x2="3" y2="12"></line>
                        <line x1="21" y1="12" x2="23" y2="12"></line>
                        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
                        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
                    </svg>
                `;
            }
        });

        function copyLink(link, button) {
            const tempInput = document.createElement('input');
            tempInput.setAttribute('value', link);
            document.body.appendChild(tempInput);
            tempInput.select();
            document.execCommand('copy');
            document.body.removeChild(tempInput);
            button.textContent = 'Copied!';
            setTimeout(() => {
                button.textContent = 'Copy';
            }, 1500);
        }

        const qrButtons = document.querySelectorAll('.qr-button');
        const qrPopup = document.getElementById('qrPopup');
        const qrCodeContainer = document.getElementById('qrCodeContainer');

        qrButtons.forEach((qrButton) => {
            qrButton.addEventListener('click', () => {
                const link = qrButton.dataset.link;
                while (qrCodeContainer.firstChild) {
                    qrCodeContainer.removeChild(qrCodeContainer.firstChild);
                }
                new QRCode(qrCodeContainer, {
                    text: link,
                    width: 256,
                    height: 256,
                    correctLevel: QRCode.CorrectLevel.L
                });
                qrPopup.style.display = 'block';
            });
        });

        function closeQrPopup() {
            qrPopup.style.display = 'none';
        }

        const accordionToggle = document.getElementById('accordionToggle');
        const accordionContent = document.getElementById('accordionContent');

        accordionToggle.addEventListener('click', () => {
            const isActive = accordionContent.classList.contains('active');
            if (isActive) {
                accordionContent.classList.remove('active');
                accordionContent.style.maxHeight = '0';
                accordionToggle.classList.remove('active');
            } else {
                accordionContent.classList.add('active');
                accordionContent.style.maxHeight = accordionContent.scrollHeight + 'px';
                accordionToggle.classList.add('active');
            }
        });

        const translations = {
    en: {
        subscriptionInfo: "Subscription Info",
        email: "Email",
        dataLimit: "Data Limit",
        used: "Used",
        remaining: "Remaining",
        expires: "Expires At",
        yourLink: "Your Link",
        ViewyourLink: "Click for view",
        Status: "Status",
        Windows: "Windows",
        Linux: "Linux",
        iOS: "iOS",
        Android: "Android",
        Download_App: "Download Application",
        day: "Day",
        hour: "Hour",
        minute: "Minute",
        expired: "Expired",
        infinite: "∞",
        active: "Active",
        deactive: "deactivate",
        lessMinutes: "Less than a minute",
        noSubs: "No subscription found."
    },
   
        const langKey = () => document.body.getAttribute('data-lang') || 'fa';

        const updateTranslations = () => {
            const lang = langKey();
            document.querySelectorAll('[data-i18n]').forEach(el => {
                const key = el.getAttribute('data-i18n');
                const translated = translations[lang]?.[key];
                if (translated) el.textContent = translated;
            });
        };

        const toggleLang = () => {
            const current = langKey();
            const next = current === 'en' ? 'fa' : 'en';
            document.body.setAttribute('data-lang', next);
            document.body.classList.toggle('rtl', next === 'fa');

            document.querySelector('.remaining-days').innerHTML = formatRemainingTime(<%- JSON.stringify(data.expiryTime) %>);

            updateTranslations();
        };
        document.querySelector('.remaining-days').innerHTML = formatRemainingTime(<%- JSON.stringify(data.expiryTime) %>);
        document.getElementById('languageToggle')?.addEventListener('click', toggleLang);
        document.addEventListener('DOMContentLoaded', updateTranslations);
    

     </script>
</body>
</html>